@model RecoreView;
@{ 
    string RenderField(RecoreFormField field)
    {
        string config = field.Config == null ? "" : "v-bind:config=\"{" + string.Join(",",field.Config.Select(c => $"{c.Key}: '{c.Value}'")) + "}\"";
        return $"<{field.FieldType} label=\"{ field.Label}\" name=\"{field.Name}\" v-bind:value=\"row.data.{field.Field}\" v-on:recorechange=\"model.{field.Field} = $event\" {config}></{field.FieldType}>";
    }
}
<div id="app">
    <table class = "table" id="view">
        <thead>
            <tr>
            @foreach(var item in Model.Columns){
                <th>@item.Label</th>
            }
            </tr>
        </thead>
    <tbody>
        <tr v-for="row in records">
            @foreach(var item in Model.Columns){
                <td>@Html.Raw(RenderField(item))</td>
            }
        </tr>
    </tbody>
    </table>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script type="text/javascript">
    @foreach(string component in (IEnumerable<string>)ViewData["components"])
    {
        @Html.Raw(component)
    }
    var app = new Vue({
        el: "#app",
        data: {
            columns: [
                @Html.Raw(string.Join(",", Model.Columns.Select(k => $"'{k.Field}'")))
            ],
            recordType: "@Model.recordType",
            records: [],
        },
        methods: {
            LoadViewData: function () {
                var target = document.querySelector("tbody");
                var request = new XMLHttpRequest();
                request.open("GET", "/data/" + this.recordType + "/")
                request.onreadystatechange = function(){
                    if (request.readyState >= 4){
                        app.records = JSON.parse(request.responseText);
                    }
                };
                request.send();
            }
        },
        mounted: function(){
            this.LoadViewData();
        }

    });
</script>