
@{
    ViewData["Title"] = "Metadata";
}

<div class="card">
    <div class="card-header"><h5>Metadata</h5></div>
    <div class="card-body">
        <div id="app">
            <div class="d-flex">
                <div class="p-2">
                    <div class="list-group">
                        <a href="#" v-bind:class="['list-group-item','list-group-item-action', selectedType == type.name ? 'active' : '']" v-on:click="getRecordTypeFields(type.name)" v-for="type in recordTypes">{{type.name}}</a>
                    </div>
                    <br/>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addNewRecordType">
                        Add new record type
                    </button>
                </div>
                <div class="p-2" v-show="selectedType != ''">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="key in fields">
                                <td>
                                    {{key.name}}
                                </td>
                                <td>
                                    {{key.value.type}}
                                </td>
                                <td>
                                    <div v-on:click="deleteField(key.name)" class="btn btn-danger">Delete Field</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <button v-show="selectedType != ''" type="button" class="btn btn-primary" data-toggle="modal" data-target="#addField">
                        Add new field
                    </button>
                    <button v-show="selectedType != ''" type="button" class="btn btn-danger" v-on:click="deleteRecordType()">
                        Delete Record Type
                    </button>

                </div>
            </div>
                    <!-- Modals -->
                    <div class="modal fade" id="addField" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Add new field</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div class="form-group">
                                        <label for="newFieldType">Type</label>
                                        <select v-model="newFieldType" class="form-control" id="newFieldType">
                                            <option value="">---</option>
                                            <option value="TextField">Text Field</option>
                                            <option value="NumberField">Number Field</option>
                                            <option value="GuidField">GUID Field</option>
                                            <option value="LookupField">Lookup Field</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="newFieldName">Field Name</label>
                                        <input v-model="newFieldName" id="newFieldName" class="form-control" type="text" />
                                    </div>
                                    <div class="form-group">
                                        <label for="newFieldNullable">Can be blank?</label>
                                        <input v-model="newFieldNullable" id="newFieldNullable" class="form-control" type="checkbox" />
                                    </div>
                                    <div class="form-group" v-show="newFieldType == 'TextField'">
                                        <label for="newFieldLength">Length</label>
                                        <input v-model="newFieldLength" id="newFieldLength" class="form-control" type="number" />
                                    </div>
                                    <div class="form-group" v-show="newFieldType == 'LookupField'">
                                        <label for="newFieldTarget">Target</label>
                                        <select v-model="newFieldTarget" id="newFieldTarget">
                                            <option v-for="type in recordTypes" v-bind:value="type.name">{{type.name}}</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" v-on:click="createNewField()" class="btn btn-primary">Create</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="addNewRecordType" tabindex="-1" role="dialog" aria-labelledby="addRecordType" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Add new recod type</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div class="form-group">
                                        <label for="newRecordTypeName">Name</label>
                                        <input v-model="newRecordTypeName" id="newRecordTypeName" class="form-control" type="text" />
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" v-on:click="createNewRecordType()" class="btn btn-primary">Create</button>
                                </div>
                            </div>
                        </div>
                    </div>
        </div>
    </div>
</div>
<script src="~/js/vue.js"></script>
<script type="text/javascript">
    var app = new Vue({
        el: "#app",
        data: {
            text: "Hello world",
            recordTypes: [],
            fields: [],
            selectedType: "",
            newFieldType: "",
            newFieldName: "",
            newFieldNullable: false,
            newFieldLength: 100,
            newFieldTarget: "",
            newRecordTypeName: "",
        },
        methods: {
            getRecordTypeFields: function (recordTypeName) {
                this.selectedType = recordTypeName;
                fetch("/metadata/recordtype/" + recordTypeName + "/fields").then((response) => {
                    return response.json();
                }).then((response) => {
                    console.log(response);
                    app.fields = [];
                    for (var field in response) {
                        app.fields.push({
                            name: field,
                            value: response[field]
                        });
                    }
                });
            },
            createNewField: function () {
                var fieldToCreate = {
                    type: this.newFieldType,
                    nullable: this.newFieldNullable,
                };
                switch (this.newFieldType) {
                    case "TextField":
                        fieldToCreate.metadata = {
                            Length: this.newFieldLength.toString(),
                        };
                        break;
                    case "LookupField":
                        fieldToCreate.metadata = {
                            Target: this.newFieldTarget.toString(),
                        };
                        break;
                }
                fetch("/metadata/recordtype/" + this.selectedType + "/fields/" + this.newFieldName, {
                    method: "POST", body: JSON.stringify(fieldToCreate), headers: { "Content-Type": "application/json" }
                }).then((response) => {
                    app.clearNewFieldModal();
                    app.getRecordTypeFields(this.selectedType);
                    $('#addField').modal('hide')
                });
            },
            clearNewFieldModal: function () {
                this.newFieldType = "";
                this.newFieldNullable = false;
                this.newFieldName = "";
                this.newFieldLength = 100;
                this.newFieldTarget = "";
            },
            clearNewRecordTypeModal: function () {
                this.newRecordTypeName = "";
            },
            createNewRecordType: function () {
                fetch("/metadata/recordtype/" + this.newRecordTypeName, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({Name:this.newRecordTypeName}),
                }).then((response) => {
                    this.getRecordTypes();
                    this.clearNewRecordTypeModal();
                    $('#addNewRecordType').modal('hide')
                });
            },
            deleteField: function (fieldName) {
                fetch("/metadata/recordtype/" + this.selectedType + "/fields/" + fieldName, {
                    method: "DELETE"
                }).then((response) => {
                    app.getRecordTypeFields(this.selectedType);
                });
            },
            getRecordTypes: function () {
                fetch("/metadata/recordtype/").then((response) => {
                    return response.json();
                }).then((response) => {
                    console.log(response);
                    app.recordTypes = response;
                    this.selectedType = "";
                });
            },
            deleteRecordType: function () {
                fetch("/metadata/recordtype/" + this.selectedType, {
                    method: "DELETE"
                }).then((response) => {
                    this.selectedType = "";
                    this.getRecordTypes();
                });
            }
        },
        beforeMount: function () {
            this.getRecordTypes();
        }
    });
</script>
@section ButtonList {

}